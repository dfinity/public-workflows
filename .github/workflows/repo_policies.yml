name: Bot Policies Ruleset

on:
  pull_request_target:
  merge_group:

jobs:
  check-is-bot:
    uses: dfinity/public-workflows/.github/workflows/check_is_bot.yml@main
    secrets: inherit

  check-bot-policies:
    name: Check Bot Policies
    runs-on: ubuntu-latest
    needs: check-is-bot
    if: ${{ needs.check-is-bot.outputs.is_bot != 'false' }}
    steps:
        # First check out code from public-workflows
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: dfinity/public-workflows
          path: public-workflows
          ref: develop

      - name: Python Setup
        uses: ./public-workflows/.github/workflows/python-setup
        with:
          working-directory: public-workflows

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          use_rest_api: 'true'

      - name: Bot Checks
        id:  bot-checks
        run: |
          set -euo pipefail
          export PYTHONPATH="$PWD/public-workflows/reusable_workflows/"
          python public-workflows/reusable_workflows/repo_policies/check_bot_approved_files.py
        shell: bash
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # no actual token stored, read-only permissions
          GH_ORG: ${{ github.repository_owner }}
          USER: ${{ github.event.pull_request.user.login }}
          REPO: ${{ github.event.repository.name }}
